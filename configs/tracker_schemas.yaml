# PixEagle Tracker Schema Configuration
# This file defines all available tracker data types and their requirements
# Allows easy addition of new tracker schemas without code changes
#
# Note on coordinate ranges:
# - Normalized coordinates can exceed [0.0, 1.0] when objects are partially off-screen
# - Range [-2.0, 2.0] allows for complete off-screen tracking while preventing extreme outliers

tracker_data_types:
  POSITION_2D:
    name: "2D Position Tracking"
    description: "Standard 2D normalized position tracking"
    category: "position"
    required_fields:
      - position_2d
    optional_fields:
      - confidence
      - bbox
      - normalized_bbox
      - velocity
    validation:
      position_2d:
        type: "tuple"
        length: 2
        element_type: "float"
        range: [-2.0, 2.0]  # Allow off-screen tracking
  
  POSITION_3D:
    name: "3D Position with Depth"
    description: "3D position tracking with depth information (includes 2D projection)"
    category: "position"
    required_fields:
      - position_3d
      - position_2d  # 2D projection is mandatory for compatibility
    optional_fields:
      - confidence
      - bbox
      - normalized_bbox
      - velocity
    validation:
      position_3d:
        type: "tuple"
        length: 3
        element_type: "float"
        range: [-2.0, 2.0]  # x,y normalized, z can be > 1
      position_2d:
        type: "tuple"
        length: 2
        element_type: "float"
        range: [-2.0, 2.0]  # Must match x,y components of position_3d
        
  ANGULAR:
    name: "Angular Bearing/Elevation"
    description: "Bearing and elevation angles in degrees"
    category: "angular"
    required_fields:
      - angular
    optional_fields:
      - confidence
      - velocity
    validation:
      angular:
        type: "tuple"
        length: 2
        element_type: "float"
        range: [-180.0, 180.0]

  GIMBAL_ANGLES:
    name: "Gimbal Angle Tracking"
    description: "Real-time gimbal yaw, pitch, roll angles from external gimbal system"
    category: "angular"
    always_reporting: true  # Always provides data when available, no manual start needed
    is_gimbal_tracker: true  # Special gimbal tracker identifier for UI
    required_fields:
      - angular
    optional_fields:
      - position_2d
      - confidence
      - gimbal_metadata
    validation:
      angular:
        type: "tuple"
        length: 3  # yaw, pitch, roll
        element_type: "float"
        range: [-180.0, 180.0]
        description: "Gimbal angles (yaw, pitch, roll) in degrees"
      position_2d:
        type: "tuple"
        length: 2
        element_type: "float"
        range: [-2.0, 2.0]
        description: "Projected target position from gimbal angles"
      gimbal_metadata:
        type: "dict"
        optional_keys:
          - coordinate_system
          - connection_status
          - target_vector_body
          - aircraft_attitude
        
  BBOX_CONFIDENCE:
    name: "Bounding Box with Confidence"
    description: "Traditional bounding box tracking with confidence"
    category: "bbox"
    required_fields:
      - bbox_or_normalized_bbox  # Special requirement - at least one must exist
    optional_fields:
      - confidence
      - position_2d
      - velocity
    validation:
      bbox:
        type: "tuple"
        length: 4
        element_type: "int"
        min_value: 0
      normalized_bbox:
        type: "tuple"
        length: 4
        element_type: "float"
        range: [-2.0, 2.0]  # Allow objects partially or completely off-screen
        
  VELOCITY_AWARE:
    name: "Position with Velocity Estimation"
    description: "Position tracking with velocity estimates"
    category: "motion"
    required_fields:
      - position_2d
      - velocity
    optional_fields:
      - confidence
      - acceleration
      - bbox
      - normalized_bbox
    validation:
      position_2d:
        type: "tuple"
        length: 2
        element_type: "float"
        range: [-2.0, 2.0]  # Allow off-screen tracking
      velocity:
        type: "tuple"
        length: 2
        element_type: "float"
        
  EXTERNAL:
    name: "External Data Source"
    description: "Data from external sources (radar, GPS, etc.)"
    category: "external"
    required_fields:
      - raw_data  # Must contain source-specific data
    optional_fields:
      - position_2d
      - position_3d
      - angular
      - confidence
      - metadata
    validation:
      raw_data:
        type: "dict"
        required_keys:
          - source_type
          - source_data
          
  MULTI_TARGET:
    name: "Multiple Target Tracking"
    description: "Tracking multiple targets simultaneously"
    category: "multi"
    required_fields:
      - targets
    optional_fields:
      - target_id  # ID of selected/primary target
      - position_2d  # Primary target position
      - confidence
      - bbox
      - normalized_bbox
    validation:
      targets:
        type: "list"
        min_length: 1
        element_schema:
          type: "dict"
          required_keys:
            - target_id
            - confidence
          optional_keys:
            - class_id
            - class_name
            - bbox
            - center
            - is_selected

# Tracker type configurations
tracker_types:
  CSRTTracker:
    name: "CSRT Tracker"
    description: "Channel and Spatial Reliability Tracker from OpenCV"
    supported_schemas:
      - POSITION_2D
      - BBOX_CONFIDENCE
      - VELOCITY_AWARE  # When estimator is enabled
    capabilities:
      - rotation_invariant
      - scale_invariant
      - occlusion_handling
    performance:
      accuracy: "high"
      speed: "medium"
      
  SmartTracker:
    name: "YOLO-based Smart Tracker"
    description: "YOLO object detection with tracking"
    supported_schemas:
      - MULTI_TARGET
      - POSITION_2D  # For selected target
      - BBOX_CONFIDENCE
    capabilities:
      - multi_target
      - object_classification
      - real_time_detection
    performance:
      accuracy: "very_high"
      speed: "fast"

  GimbalTracker:
    name: "Gimbal Angle Tracker"
    description: "Real-time gimbal angle tracking via UDP protocol"
    supported_schemas:
      - GIMBAL_ANGLES
      - ANGULAR  # Backward compatibility
      - POSITION_2D  # Derived from angle conversion
    capabilities:
      - external_data_source
      - real_time_updates
      - coordinate_transformation
      - suppressed_image_processing
    performance:
      accuracy: "very_high"  # Direct gimbal data
      speed: "very_fast"     # No image processing
      latency: "minimal"     # UDP direct connection
      
  ParticleFilterTracker:
    name: "Particle Filter Tracker"
    description: "Probabilistic particle filter tracking"
    supported_schemas:
      - POSITION_2D
      - VELOCITY_AWARE
      - BBOX_CONFIDENCE
    capabilities:
      - uncertainty_estimation
      - non_linear_motion
      - multiple_hypotheses
    performance:
      accuracy: "high"
      speed: "slow"

# Schema compatibility matrix
compatibility:
  followers:
    ChaseFollower:
      required_schemas:
        - POSITION_2D
      compatible_schemas:
        - POSITION_3D  # Works because 3D includes 2D projection
        - BBOX_CONFIDENCE
        - VELOCITY_AWARE
    BodyVelocityChaseFollower:
      required_schemas:
        - POSITION_2D
      compatible_schemas:
        - POSITION_3D  # Works because 3D includes 2D projection
      preferred_schemas:
        - VELOCITY_AWARE
      optional_schemas:
        - BBOX_CONFIDENCE
    ConstantPositionFollower:
      required_schemas:
        - POSITION_2D
      compatible_schemas:
        - POSITION_3D  # Works because 3D includes 2D projection
      optional_schemas:
        - ANGULAR
        - BBOX_CONFIDENCE
    ConstantDistanceFollower:
      required_schemas:
        - POSITION_2D
      compatible_schemas:
        - POSITION_3D  # Works because 3D includes 2D projection (and adds depth info)
      preferred_schemas:
        - POSITION_3D  # Actually prefers 3D for distance calculations
      optional_schemas:
        - ANGULAR
    GroundTargetFollower:
      required_schemas:
        - POSITION_2D
      compatible_schemas:
        - POSITION_3D  # Works because 3D includes 2D projection
      preferred_schemas:
        - ANGULAR
        - POSITION_3D  # 3D helps with ground projection
      optional_schemas:
        - EXTERNAL
    GimbalFollower:
      required_schemas:
        - GIMBAL_ANGLES
      compatible_schemas:
        - ANGULAR  # Can work with standard angular data
      preferred_schemas:
        - GIMBAL_ANGLES  # Designed specifically for gimbal data
      optional_schemas:
        - POSITION_2D  # Additional positioning data

# Future extensibility guidelines
extensibility:
  adding_new_schema:
    steps:
      - "Define schema in this YAML file"
      - "Add validation rules"
      - "Update tracker implementations as needed"
      - "Test compatibility with existing followers"
  adding_new_tracker:
    steps:
      - "Implement BaseTracker interface"
      - "Define supported schemas in this file"
      - "Add to tracker factory"
      - "Test with all compatible followers"
  schema_versioning:
    current_version: "1.0"
    backward_compatibility: true
    migration_support: true